---
- name: Ensure old versions of Docker are not installed.
  package:
    name: '{{ item }}'
    state: absent
  with_items:
    - docker
    - docker-engine

- name: Ensure depdencies are installed.
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Add Docker apt key.
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: true

- name: Ensure curl is present (on older systems without SNI).
  package: name=curl state=present
  when: add_repository_key|failed

- name: Add Docker apt key (alternative for older systems without SNI).
  shell: "curl -sSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
  args:
    warn: no
  when: add_repository_key|failed

- name: Add Docker repository.
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: yes

- name: Docker | Configure Proxy - Ubuntu systemd
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'
  blockinfile:
    path: /lib/systemd/system/docker.service
    insertafter: '^\[Service\]$'
    content: |
      Environment="HTTP_PROXY={{ docker_http_proxy }}"
      Environment="HTTPS_PROXY={{ docker_http_proxy }}"
      Environment="NO_PROXY={{ docker_no_proxy }}"

- name: Docker | Reload configuration
  systemd:
    name: docker
    enabled: yes
    masked: no
    daemon_reload: yes
    state: restarted

- name: Docker | Log into DockerHub
  docker_login:
    username: "{{ docker_hub_username }}"
    password: "{{ docker_hub_password }}"
    email: "{{ docker_hub_email }}"
